plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.21'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.21'
	id "org.sonarqube" version "5.0.0.4638" // Replace '3.3' with the correct SonarQube plugin version
	id 'pl.allegro.tech.build.axion-release' version '1.15.0'
}

scmVersion {
	tag {
		prefix = '' // Prefixo vazio para as tags
	}
	nextVersion {
		suffix = 'SNAPSHOT' // Sufixo para a próxima versão
	}
	// Este closure pode ser usado para modificar o comportamento do versionamento
	versionIncrementer 'incrementMinorIfNotOnRelease'
}

tasks.named('release') {
	onlyIf {
		// Condicional para permitir release apenas em branches específicas
		def currentBranch = gitCurrentBranch()
		return currentBranch.startsWith('feature/') || currentBranch == 'master'
	}
}

def gitCurrentBranch() {
	def process = 'git rev-parse --abbrev-ref HEAD'.execute()
	process.waitFor()
	def branch = process.in.text.trim()
	return branch
}



repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' } // Mantém apenas os milestones se necessário
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web:3.2.1'
	implementation 'org.springframework.boot:spring-boot-starter-json:3.2.1'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat:3.2.1'
	implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.16.1'
	runtimeOnly group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.9.22'
	implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.2.1'
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '3.2.2'
}

tasks.named('currentVersion') {
	doNotTrackState("Avoid state tracking for version task")
}


group = 'com.openai'
version = '0.0.1-SNAPSHOT'
version = scmVersion.version // O plugin `axion-release` vai gerenciar a versão

java {
	sourceCompatibility = '17'
}

jacoco {
	toolVersion = "0.8.7" // Use the desired JaCoCo version
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // ensures the report is generated after tests run
}

jacocoTestReport {
//	dependsOn test // makes the report task depend on the successful completion of the test task

	reports {
		xml.required = true
		html.required = true // Enable HTML report generation (optional)
		csv.required = false // Disable CSV report (optional)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

// START OF SONAR MULTI-MODULE CONFIGURATION
sonarqube {
	properties {
		property "sonar.projectKey", "GabrielPedrico_api-guru-gpt"
		property "sonar.projectName", "api-guru-gpt"
		property "sonar.organization", "gabrielpedrico"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.exclusions", "build/generated/**/*"
	}
}

processResources {
	filesMatching('banner.txt') {
		filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: ['projectVersion': scmVersion.version])
	}
}




