import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.3.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.21'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.21'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "5.0.0.4638" // Replace '3.3' with the correct SonarQube plugin version

}

apply plugin: 'java'
apply plugin: 'jacoco'

jacoco {
	toolVersion = "0.8.7" // Use the desired JaCoCo version
}

test {
	finalizedBy jacocoTestReport // ensures the report is generated after tests run
}

jacocoTestReport {
	dependsOn test // makes the report task depend on the successful completion of the test task

	reports {
		xml.required = true
		html.required = true // Enable HTML report generation (optional)
		csv.required = false // Disable CSV report (optional)
	}
}

group = 'com.openai'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.2.1'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.2.1'
	implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.16.1'
	runtimeOnly group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.9.22'
	implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.2.1'
	developmentOnly group: 'org.springframework.boot', name: 'spring-boot-docker-compose', version: '3.2.4'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.2.224'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.2'
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '3.2.2'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.2.224'


}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

// START OF SONAR MULTI-MODULE CONFIGURATION
sonarqube {
	properties {
		property "sonar.projectKey", "GabrielPedrico_api-guru-gpt"
		property "sonar.projectName", "api-guru-gpt"
		property "sonar.organization", "gabrielpedrico"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.exclusions", "build/generated/**/*"
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
